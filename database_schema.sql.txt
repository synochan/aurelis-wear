-- SQL Script to create tables for Aurelis Wear backend

-- Table: authentication_userprofile
CREATE TABLE authentication_userprofile (
    id SERIAL PRIMARY KEY,
    user_id INTEGER UNIQUE NOT NULL REFERENCES auth_user(id) ON DELETE CASCADE,
    address TEXT,
    phone VARCHAR(20)
);

-- Table: cart_cart
CREATE TABLE cart_cart (
    id SERIAL PRIMARY KEY,
    user_id INTEGER UNIQUE NOT NULL REFERENCES auth_user(id) ON DELETE CASCADE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Table: cart_cartitem
CREATE TABLE cart_cartitem (
    id SERIAL PRIMARY KEY,
    cart_id INTEGER NOT NULL REFERENCES cart_cart(id) ON DELETE CASCADE,
    product_id INTEGER NOT NULL REFERENCES products_product(id) ON DELETE CASCADE,
    color_id INTEGER NOT NULL REFERENCES products_color(id) ON DELETE CASCADE,
    size_id INTEGER NOT NULL REFERENCES products_size(id) ON DELETE CASCADE,
    quantity INTEGER NOT NULL DEFAULT 1,
    added_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT unique_product_in_cart UNIQUE (cart_id, product_id, color_id, size_id)
);

-- Table: orders_order
CREATE TABLE orders_order (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES auth_user(id) ON DELETE CASCADE,
    status VARCHAR(20) NOT NULL DEFAULT 'pending',
    payment_method VARCHAR(20) NOT NULL,
    payment_status BOOLEAN NOT NULL DEFAULT FALSE,
    shipping_address TEXT NOT NULL,
    billing_address TEXT,
    shipping_price NUMERIC(10,2) NOT NULL DEFAULT 0,
    total_price NUMERIC(10,2) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Table: orders_orderitem
CREATE TABLE orders_orderitem (
    id SERIAL PRIMARY KEY,
    order_id INTEGER NOT NULL REFERENCES orders_order(id) ON DELETE CASCADE,
    product_id INTEGER NOT NULL REFERENCES products_product(id) ON DELETE CASCADE,
    color_id INTEGER NOT NULL REFERENCES products_color(id) ON DELETE CASCADE,
    size_id INTEGER NOT NULL REFERENCES products_size(id) ON DELETE CASCADE,
    quantity INTEGER NOT NULL DEFAULT 1,
    price NUMERIC(10,2) NOT NULL
);

-- Table: payments_payment
CREATE TABLE payments_payment (
    id SERIAL PRIMARY KEY,
    order_id INTEGER UNIQUE NOT NULL REFERENCES orders_order(id) ON DELETE CASCADE,
    stripe_payment_intent_id VARCHAR(100),
    stripe_payment_method_id VARCHAR(100),
    amount NUMERIC(10,2) NOT NULL,
    currency VARCHAR(3) NOT NULL DEFAULT 'USD',
    status VARCHAR(20) NOT NULL DEFAULT 'pending',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Table: products_category
CREATE TABLE products_category (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    slug VARCHAR(255) UNIQUE NOT NULL
);

-- Table: products_color
CREATE TABLE products_color (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    hex_value VARCHAR(7) NOT NULL
);

-- Table: products_size
CREATE TABLE products_size (
    id SERIAL PRIMARY KEY,
    name VARCHAR(20) NOT NULL,
    size_type VARCHAR(20) NOT NULL DEFAULT 'clothing'
);

-- Table: products_product
CREATE TABLE products_product (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price NUMERIC(10,2) NOT NULL,
    description TEXT,
    category_id INTEGER NOT NULL REFERENCES products_category(id) ON DELETE PROTECT,
    is_new BOOLEAN NOT NULL DEFAULT FALSE,
    is_featured BOOLEAN NOT NULL DEFAULT FALSE,
    discount_percentage INTEGER CHECK (discount_percentage >= 0 AND discount_percentage <= 100),
    in_stock BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Table: products_product_colors (ManyToMany)
CREATE TABLE products_product_colors (
    id SERIAL PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products_product(id) ON DELETE CASCADE,
    color_id INTEGER NOT NULL REFERENCES products_color(id) ON DELETE CASCADE,
    UNIQUE (product_id, color_id)
);

-- Table: products_product_sizes (ManyToMany)
CREATE TABLE products_product_sizes (
    id SERIAL PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products_product(id) ON DELETE CASCADE,
    size_id INTEGER NOT NULL REFERENCES products_size(id) ON DELETE CASCADE,
    UNIQUE (product_id, size_id)
);

-- Table: products_productimage
CREATE TABLE products_productimage (
    id SERIAL PRIMARY KEY,
    product_id INTEGER NOT NULL REFERENCES products_product(id) ON DELETE CASCADE,
    image VARCHAR(255) NOT NULL,
    is_primary BOOLEAN NOT NULL DEFAULT FALSE
);

-- Note: The auth_user table is assumed to be created by Django's auth system.
